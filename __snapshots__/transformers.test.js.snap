// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformSelection can handle block case 1`] = `
Object {
  "args": Array [],
  "code": "{{#foo-bar as |boo|}}
                {{boo}}
           {{/foo-bar}}",
  "shape": Object {},
}
`;

exports[`transformSelection can handle block case 2`] = `
Object {
  "args": Array [],
  "code": "<FooBar as |boo|>
            {{boo}}
          </FooBar>",
  "shape": Object {},
}
`;

exports[`transformSelection can handle context as argument 1`] = `
Object {
  "args": Array [
    "@context={{this}}",
  ],
  "code": "<MyComponent @model={{@context}} />",
  "shape": Object {
    "context": "any",
  },
}
`;

exports[`transformSelection can handle contextual args case 1`] = `
Object {
  "args": Array [
    "@foo={{this.foo}}",
  ],
  "code": "<div>{{@foo}}</div>",
  "shape": Object {
    "foo": "any",
  },
}
`;

exports[`transformSelection can handle contextual args.path case 1`] = `
Object {
  "args": Array [
    "@foo={{this.foo}}",
  ],
  "code": "<div>{{@foo.baz}}</div>",
  "shape": Object {
    "foo": Object {
      "baz": "any",
    },
  },
}
`;

exports[`transformSelection can handle contextual args.path multi case 1`] = `
Object {
  "args": Array [
    "@foo={{this.foo}}",
  ],
  "code": "<div>{{@foo.baz}}{{@foo.baz.boo}}</div>",
  "shape": Object {
    "foo": Object {
      "baz": Object {
        "boo": "any",
      },
    },
  },
}
`;

exports[`transformSelection can handle each loops 1`] = `
Object {
  "args": Array [
    "@models={{this.models}}",
  ],
  "code": "{{#each @models as |item|}}{{item.name}}{{/each}}",
  "shape": Object {
    "models": Array [
      Object {
        "name": "any",
      },
      Object {
        "name": "any",
      },
      Object {
        "name": "any",
      },
    ],
  },
}
`;

exports[`transformSelection can handle each loops 2`] = `
Object {
  "args": Array [
    "@models={{this.models}}",
  ],
  "code": "{{#each @models as |item|}}{{item}}{{/each}}",
  "shape": Object {
    "models": Array [
      "foo",
      "bar",
      "baz",
    ],
  },
}
`;

exports[`transformSelection can handle each loops 3`] = `
Object {
  "args": Array [
    "@models={{this.models}}",
  ],
  "code": "{{#each @models as |item|}}{{#each item as |it|}}{{it.name}}{{/each}}{{/each}}",
  "shape": Object {
    "models": Array [
      Array [
        Object {
          "name": "any",
        },
        Object {
          "name": "any",
        },
        Object {
          "name": "any",
        },
      ],
      Array [
        Object {
          "name": "any",
        },
        Object {
          "name": "any",
        },
        Object {
          "name": "any",
        },
      ],
      Array [
        Object {
          "name": "any",
        },
        Object {
          "name": "any",
        },
        Object {
          "name": "any",
        },
      ],
    ],
  },
}
`;

exports[`transformSelection can handle external args case 1`] = `
Object {
  "args": Array [
    "@foo={{@foo}}",
  ],
  "code": "<div>{{@foo}}</div>",
  "shape": Object {
    "foo": "any",
  },
}
`;

exports[`transformSelection can handle external args.path case 1`] = `
Object {
  "args": Array [
    "@foo={{@foo}}",
  ],
  "code": "<div>{{@foo.baz}}</div>",
  "shape": Object {
    "foo": Object {
      "baz": "any",
    },
  },
}
`;

exports[`transformSelection can handle external args.path multi case 1`] = `
Object {
  "args": Array [
    "@foo={{@foo}}",
  ],
  "code": "<div>{{@foo.baz}} {{@foo.bar}}<</div>",
  "shape": Object {
    "foo": Object {
      "bar": "any",
      "baz": "any",
    },
  },
}
`;

exports[`transformSelection can handle local args case 1`] = `
Object {
  "args": Array [
    "@foo={{foo}}",
  ],
  "code": "<div>{{@foo.bar}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": "any",
    },
  },
}
`;

exports[`transformSelection can handle local args multi case 1`] = `
Object {
  "args": Array [
    "@foo={{foo}}",
  ],
  "code": "<div>{{@foo.bar}} {{@foo.baz}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": "any",
      "baz": "any",
    },
  },
}
`;

exports[`transformSelection can handle no-args case 1`] = `
Object {
  "args": Array [],
  "code": "<div></div>",
  "shape": Object {},
}
`;

exports[`transformSelection can handle real case #1 1`] = `
Object {
  "args": Array [
    "@currentUser={{currentUser}}",
    "@model={{model}}",
  ],
  "code": "<div class=\\"ui text container\\">
                <h1 style=\\"margin-top:20px;\\" class=\\"ui header\\">
                Journal #
                    {{@model.journal_id}}
                </h1>
                    <SmJournal 
                        @model={{@model}}
                        @autoresolve={{true}}
                        @currentUser={{@currentUser}}
                        @commentsToggleClass=\\"\\"
                    />
                {{outlet}}
            </div>",
  "shape": Object {
    "currentUser": "any",
    "model": Object {
      "journal_id": "any",
    },
  },
}
`;

exports[`transformSelection can handle same args case for contextual + external 1`] = `
Object {
  "args": Array [
    "@foo={{@foo}}",
    "@scopedFoo={{this.foo}}",
  ],
  "code": "<div>{{@foo.bar}} {{@scopedFoo.baz}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": "any",
    },
    "scopedFoo": Object {
      "baz": "any",
    },
  },
}
`;

exports[`transformSelection can handle same args case for contextual + external 2`] = `
Object {
  "args": Array [
    "@foo={{@foo}}",
    "@scopedFoo={{this.foo}}",
  ],
  "code": "<div>{{@foo.bar.boo}} {{@scopedFoo.bar.baz}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": Object {
        "boo": "any",
      },
    },
    "scopedFoo": Object {
      "bar": Object {
        "baz": "any",
      },
    },
  },
}
`;

exports[`transformSelection can handle same args case for contextual + local 1`] = `
Object {
  "args": Array [
    "@foo={{this.foo}}",
    "@localFoo={{foo}}",
  ],
  "code": "<div>{{@foo.bar}} {{@localFoo.baz}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": "any",
    },
    "localFoo": Object {
      "baz": "any",
    },
  },
}
`;

exports[`transformSelection can handle same args case for contextual + local 2`] = `
Object {
  "args": Array [
    "@foo={{this.foo}}",
    "@localFoo={{foo}}",
  ],
  "code": "<div>{{@foo.bar.boo}} {{@localFoo.bar.baz}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": Object {
        "boo": "any",
      },
    },
    "localFoo": Object {
      "bar": Object {
        "baz": "any",
      },
    },
  },
}
`;

exports[`transformSelection can handle same args case for external + local + contextual 1`] = `
Object {
  "args": Array [
    "@foo={{@foo}}",
    "@localFoo={{foo}}",
    "@scopedFoo={{this.foo}}",
  ],
  "code": "<div>{{@foo.bar}} {{@localFoo.bar}} {{@scopedFoo.bar}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": "any",
    },
    "localFoo": Object {
      "bar": "any",
    },
    "scopedFoo": Object {
      "bar": "any",
    },
  },
}
`;

exports[`transformSelection can handle same args case for external + local + contextual 2`] = `
Object {
  "args": Array [
    "@foo={{@foo}}",
    "@localFoo={{foo}}",
    "@scopedFoo={{this.foo}}",
  ],
  "code": "<div>{{@foo.bar.boo}} {{@localFoo.bar.boo}} {{@scopedFoo.bar.boo}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": Object {
        "boo": "any",
      },
    },
    "localFoo": Object {
      "bar": Object {
        "boo": "any",
      },
    },
    "scopedFoo": Object {
      "bar": Object {
        "boo": "any",
      },
    },
  },
}
`;

exports[`transformSelection can handle same args case for external + local 1`] = `
Object {
  "args": Array [
    "@foo={{@foo}}",
    "@localFoo={{foo}}",
  ],
  "code": "<div>{{@foo.bar}} {{@localFoo.baz}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": "any",
    },
    "localFoo": Object {
      "baz": "any",
    },
  },
}
`;

exports[`transformSelection can handle same args case for external + local 2`] = `
Object {
  "args": Array [
    "@foo={{@foo}}",
    "@localFoo={{foo}}",
  ],
  "code": "<div>{{@foo.bar.boo}} {{@localFoo.bar.baz}}</div>",
  "shape": Object {
    "foo": Object {
      "bar": Object {
        "boo": "any",
      },
    },
    "localFoo": Object {
      "bar": Object {
        "baz": "any",
      },
    },
  },
}
`;
